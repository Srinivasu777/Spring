<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <display-name>SpringMVCIntro</display-name>
  <welcome-file-list>
    <welcome-file>index.html</welcome-file>
    <welcome-file>index.htm</welcome-file>
    <welcome-file>index.jsp</welcome-file>
    <welcome-file>default.html</welcome-file>
    <welcome-file>default.htm</welcome-file>
    <welcome-file>default.jsp</welcome-file>
  </welcome-file-list>
  
  <!-- DispatcherServlet plays the role of an entry point in our application.
 		It will help us in processing any incoming requests from the clients.
 		Also we don't need to write this code anymore:
 				//Loading IoC container
				ApplicationContext ctx = new ClassPathXmlApplicationContext("spring-config.xml");
 		This DispatcherServlet will automatically create the ApplicationContext object for us.
 		Only thing is the name of the xml file cannot be spring-config.xml, rather it has to be like this:
 		What is the servlet-name below, for ex if it is: "spring"
 		Then the xml file should be named as spring-servlet.xml
 		 -->
   <servlet>
    <servlet-name>spring</servlet-name>
      <servlet-class>
        org.springframework.web.servlet.DispatcherServlet
      </servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>
 
  <servlet-mapping>
    <servlet-name>spring</servlet-name>
    <url-pattern>/</url-pattern>
  </servlet-mapping>
  
</web-app>